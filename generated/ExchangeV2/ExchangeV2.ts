// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Cancel extends ethereum.Event {
  get params(): Cancel__Params {
    return new Cancel__Params(this);
  }
}

export class Cancel__Params {
  _event: Cancel;

  constructor(event: Cancel) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get maker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get makeAssetType(): CancelMakeAssetTypeStruct {
    return changetype<CancelMakeAssetTypeStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }

  get takeAssetType(): CancelTakeAssetTypeStruct {
    return changetype<CancelTakeAssetTypeStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class CancelMakeAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class CancelTakeAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class Match extends ethereum.Event {
  get params(): Match__Params {
    return new Match__Params(this);
  }
}

export class Match__Params {
  _event: Match;

  constructor(event: Match) {
    this._event = event;
  }

  get leftHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get rightHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get leftMaker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get rightMaker(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get newLeftFill(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get newRightFill(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get leftAsset(): MatchLeftAssetStruct {
    return changetype<MatchLeftAssetStruct>(
      this._event.parameters[6].value.toTuple()
    );
  }

  get rightAsset(): MatchRightAssetStruct {
    return changetype<MatchRightAssetStruct>(
      this._event.parameters[7].value.toTuple()
    );
  }
}

export class MatchLeftAssetStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MatchRightAssetStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MatcherChange extends ethereum.Event {
  get params(): MatcherChange__Params {
    return new MatcherChange__Params(this);
  }
}

export class MatcherChange__Params {
  _event: MatcherChange;

  constructor(event: MatcherChange) {
    this._event = event;
  }

  get assetType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get matcher(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyChange extends ethereum.Event {
  get params(): ProxyChange__Params {
    return new ProxyChange__Params(this);
  }
}

export class ProxyChange__Params {
  _event: ProxyChange;

  constructor(event: ProxyChange) {
    this._event = event;
  }

  get assetType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get asset(): TransferAssetStruct {
    return changetype<TransferAssetStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get transferDirection(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get transferType(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class TransferAssetStruct extends ethereum.Tuple {
  get assetType(): TransferAssetAssetTypeStruct {
    return changetype<TransferAssetAssetTypeStruct>(this[0].toTuple());
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class TransferAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class ExchangeV2 extends ethereum.SmartContract {
  static bind(address: Address): ExchangeV2 {
    return new ExchangeV2("ExchangeV2", address);
  }

  defaultFeeReceiver(): Address {
    let result = super.call(
      "defaultFeeReceiver",
      "defaultFeeReceiver():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_defaultFeeReceiver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "defaultFeeReceiver",
      "defaultFeeReceiver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeReceivers(param0: Address): Address {
    let result = super.call("feeReceivers", "feeReceivers(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_feeReceivers(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "feeReceivers",
      "feeReceivers(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fills(param0: Bytes): BigInt {
    let result = super.call("fills", "fills(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBigInt();
  }

  try_fills(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fills", "fills(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFee(): BigInt {
    let result = super.call("protocolFee", "protocolFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_protocolFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("protocolFee", "protocolFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  royaltiesRegistry(): Address {
    let result = super.call(
      "royaltiesRegistry",
      "royaltiesRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_royaltiesRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltiesRegistry",
      "royaltiesRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class __ExchangeV2_initCall extends ethereum.Call {
  get inputs(): __ExchangeV2_initCall__Inputs {
    return new __ExchangeV2_initCall__Inputs(this);
  }

  get outputs(): __ExchangeV2_initCall__Outputs {
    return new __ExchangeV2_initCall__Outputs(this);
  }
}

export class __ExchangeV2_initCall__Inputs {
  _call: __ExchangeV2_initCall;

  constructor(call: __ExchangeV2_initCall) {
    this._call = call;
  }

  get _transferProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _erc20TransferProxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newProtocolFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get newDefaultFeeReceiver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get newRoyaltiesProvider(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class __ExchangeV2_initCall__Outputs {
  _call: __ExchangeV2_initCall;

  constructor(call: __ExchangeV2_initCall) {
    this._call = call;
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get order(): CancelCallOrderStruct {
    return changetype<CancelCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CancelCallOrderStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get makeAsset(): CancelCallOrderMakeAssetStruct {
    return changetype<CancelCallOrderMakeAssetStruct>(this[1].toTuple());
  }

  get taker(): Address {
    return this[2].toAddress();
  }

  get takeAsset(): CancelCallOrderTakeAssetStruct {
    return changetype<CancelCallOrderTakeAssetStruct>(this[3].toTuple());
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get start(): BigInt {
    return this[5].toBigInt();
  }

  get end(): BigInt {
    return this[6].toBigInt();
  }

  get dataType(): Bytes {
    return this[7].toBytes();
  }

  get data(): Bytes {
    return this[8].toBytes();
  }
}

export class CancelCallOrderMakeAssetStruct extends ethereum.Tuple {
  get assetType(): CancelCallOrderMakeAssetAssetTypeStruct {
    return changetype<CancelCallOrderMakeAssetAssetTypeStruct>(
      this[0].toTuple()
    );
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class CancelCallOrderMakeAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class CancelCallOrderTakeAssetStruct extends ethereum.Tuple {
  get assetType(): CancelCallOrderTakeAssetAssetTypeStruct {
    return changetype<CancelCallOrderTakeAssetAssetTypeStruct>(
      this[0].toTuple()
    );
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class CancelCallOrderTakeAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MatchOrdersCall extends ethereum.Call {
  get inputs(): MatchOrdersCall__Inputs {
    return new MatchOrdersCall__Inputs(this);
  }

  get outputs(): MatchOrdersCall__Outputs {
    return new MatchOrdersCall__Outputs(this);
  }
}

export class MatchOrdersCall__Inputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get orderLeft(): MatchOrdersCallOrderLeftStruct {
    return changetype<MatchOrdersCallOrderLeftStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get signatureLeft(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get orderRight(): MatchOrdersCallOrderRightStruct {
    return changetype<MatchOrdersCallOrderRightStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get signatureRight(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class MatchOrdersCall__Outputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }
}

export class MatchOrdersCallOrderLeftStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get makeAsset(): MatchOrdersCallOrderLeftMakeAssetStruct {
    return changetype<MatchOrdersCallOrderLeftMakeAssetStruct>(
      this[1].toTuple()
    );
  }

  get taker(): Address {
    return this[2].toAddress();
  }

  get takeAsset(): MatchOrdersCallOrderLeftTakeAssetStruct {
    return changetype<MatchOrdersCallOrderLeftTakeAssetStruct>(
      this[3].toTuple()
    );
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get start(): BigInt {
    return this[5].toBigInt();
  }

  get end(): BigInt {
    return this[6].toBigInt();
  }

  get dataType(): Bytes {
    return this[7].toBytes();
  }

  get data(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersCallOrderLeftMakeAssetStruct extends ethereum.Tuple {
  get assetType(): MatchOrdersCallOrderLeftMakeAssetAssetTypeStruct {
    return changetype<MatchOrdersCallOrderLeftMakeAssetAssetTypeStruct>(
      this[0].toTuple()
    );
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchOrdersCallOrderLeftMakeAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MatchOrdersCallOrderLeftTakeAssetStruct extends ethereum.Tuple {
  get assetType(): MatchOrdersCallOrderLeftTakeAssetAssetTypeStruct {
    return changetype<MatchOrdersCallOrderLeftTakeAssetAssetTypeStruct>(
      this[0].toTuple()
    );
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchOrdersCallOrderLeftTakeAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MatchOrdersCallOrderRightStruct extends ethereum.Tuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get makeAsset(): MatchOrdersCallOrderRightMakeAssetStruct {
    return changetype<MatchOrdersCallOrderRightMakeAssetStruct>(
      this[1].toTuple()
    );
  }

  get taker(): Address {
    return this[2].toAddress();
  }

  get takeAsset(): MatchOrdersCallOrderRightTakeAssetStruct {
    return changetype<MatchOrdersCallOrderRightTakeAssetStruct>(
      this[3].toTuple()
    );
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }

  get start(): BigInt {
    return this[5].toBigInt();
  }

  get end(): BigInt {
    return this[6].toBigInt();
  }

  get dataType(): Bytes {
    return this[7].toBytes();
  }

  get data(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersCallOrderRightMakeAssetStruct extends ethereum.Tuple {
  get assetType(): MatchOrdersCallOrderRightMakeAssetAssetTypeStruct {
    return changetype<MatchOrdersCallOrderRightMakeAssetAssetTypeStruct>(
      this[0].toTuple()
    );
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchOrdersCallOrderRightMakeAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MatchOrdersCallOrderRightTakeAssetStruct extends ethereum.Tuple {
  get assetType(): MatchOrdersCallOrderRightTakeAssetAssetTypeStruct {
    return changetype<MatchOrdersCallOrderRightTakeAssetAssetTypeStruct>(
      this[0].toTuple()
    );
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class MatchOrdersCallOrderRightTakeAssetAssetTypeStruct extends ethereum.Tuple {
  get assetClass(): Bytes {
    return this[0].toBytes();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAssetMatcherCall extends ethereum.Call {
  get inputs(): SetAssetMatcherCall__Inputs {
    return new SetAssetMatcherCall__Inputs(this);
  }

  get outputs(): SetAssetMatcherCall__Outputs {
    return new SetAssetMatcherCall__Outputs(this);
  }
}

export class SetAssetMatcherCall__Inputs {
  _call: SetAssetMatcherCall;

  constructor(call: SetAssetMatcherCall) {
    this._call = call;
  }

  get assetType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get matcher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAssetMatcherCall__Outputs {
  _call: SetAssetMatcherCall;

  constructor(call: SetAssetMatcherCall) {
    this._call = call;
  }
}

export class SetDefaultFeeReceiverCall extends ethereum.Call {
  get inputs(): SetDefaultFeeReceiverCall__Inputs {
    return new SetDefaultFeeReceiverCall__Inputs(this);
  }

  get outputs(): SetDefaultFeeReceiverCall__Outputs {
    return new SetDefaultFeeReceiverCall__Outputs(this);
  }
}

export class SetDefaultFeeReceiverCall__Inputs {
  _call: SetDefaultFeeReceiverCall;

  constructor(call: SetDefaultFeeReceiverCall) {
    this._call = call;
  }

  get newDefaultFeeReceiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDefaultFeeReceiverCall__Outputs {
  _call: SetDefaultFeeReceiverCall;

  constructor(call: SetDefaultFeeReceiverCall) {
    this._call = call;
  }
}

export class SetFeeReceiverCall extends ethereum.Call {
  get inputs(): SetFeeReceiverCall__Inputs {
    return new SetFeeReceiverCall__Inputs(this);
  }

  get outputs(): SetFeeReceiverCall__Outputs {
    return new SetFeeReceiverCall__Outputs(this);
  }
}

export class SetFeeReceiverCall__Inputs {
  _call: SetFeeReceiverCall;

  constructor(call: SetFeeReceiverCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wallet(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetFeeReceiverCall__Outputs {
  _call: SetFeeReceiverCall;

  constructor(call: SetFeeReceiverCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCall extends ethereum.Call {
  get inputs(): SetProtocolFeeCall__Inputs {
    return new SetProtocolFeeCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeCall__Outputs {
    return new SetProtocolFeeCall__Outputs(this);
  }
}

export class SetProtocolFeeCall__Inputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }

  get newProtocolFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeCall__Outputs {
  _call: SetProtocolFeeCall;

  constructor(call: SetProtocolFeeCall) {
    this._call = call;
  }
}

export class SetRoyaltiesRegistryCall extends ethereum.Call {
  get inputs(): SetRoyaltiesRegistryCall__Inputs {
    return new SetRoyaltiesRegistryCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesRegistryCall__Outputs {
    return new SetRoyaltiesRegistryCall__Outputs(this);
  }
}

export class SetRoyaltiesRegistryCall__Inputs {
  _call: SetRoyaltiesRegistryCall;

  constructor(call: SetRoyaltiesRegistryCall) {
    this._call = call;
  }

  get newRoyaltiesRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltiesRegistryCall__Outputs {
  _call: SetRoyaltiesRegistryCall;

  constructor(call: SetRoyaltiesRegistryCall) {
    this._call = call;
  }
}

export class SetTransferProxyCall extends ethereum.Call {
  get inputs(): SetTransferProxyCall__Inputs {
    return new SetTransferProxyCall__Inputs(this);
  }

  get outputs(): SetTransferProxyCall__Outputs {
    return new SetTransferProxyCall__Outputs(this);
  }
}

export class SetTransferProxyCall__Inputs {
  _call: SetTransferProxyCall;

  constructor(call: SetTransferProxyCall) {
    this._call = call;
  }

  get assetType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get proxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetTransferProxyCall__Outputs {
  _call: SetTransferProxyCall;

  constructor(call: SetTransferProxyCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
